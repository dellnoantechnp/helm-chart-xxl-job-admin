# Default values for canal-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: ghcr.io
  repository: dellnoantechnp/canal-server
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.1.6"
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname template
##
fullnameOverride: ""

## @param containerPorts.canal; container port to open for canal-server
## @param containerPorts.admin; container port to open for canal-server admin
## @param containerPorts.metrics; container port to open for canal-server metrics
##
containerPorts:
  canal: 11111
  admin: 11110
  metrics: 11112

service:
  ## @param service.type canal-server; service type
  ##
  type: ClusterIP
  ## @param service.ports.canal; Canal-server service port
  ## @param service.ports.admin; admin service port
  ## @param service.ports.metrics; metrics service port
  ##
  ports:
    canal:
      port: 11111
      nodePort: 30011
    admin:
      port: 11110
      nodePort: 30010
    metrics:
      port: 11112
      nodePort: 30012

## configure the canal-server detail
ServerConf:
  ## @param jvmFlags for canal-server process, privilege higher than heapSize.
  ##
  jvmFlags: ""
  ## @param heapOpts canal-server Java Heap size
  ##
  heapSize: 1024
  ## @param canalPortNumber specify canal-server listen tcp port number, for canal-client.
  ##
  canalPortNumber: "{{ .Values.containerPorts.canal }}"
  ## @param canalAdminPortNumber specify canal-server admin tcp port number, for canal-admin.
  ##
  canalAdminPortNumber: "{{ .Values.containerPorts.admin }}"
  ## @param canalAdminUser specify canal-server admin account username.
  ##
  canalAdminUser: admin
  ## @param canalAdminCiphertextPassword specify canal-server admin account password.
  ##
  canalAdminCiphertextPassword: admin
  ## @param canalMetricsPortNumber specify canal-server metrics tcp port number, for prometheus.
  ##
  canalMetricsPortNumber: "{{ .Values.containerPorts.metrics }}"
  ## @param canalServerMode specify canal server-mode, eg. tcp, kafka, rocketMQ, rabbitMQ, pulsarMQ
  ## 
  canalServerMode: tcp
  ## @param autoResetLatestPosMode type boolean, set this value to 'true' means that when binlog pos not found, skip to latest.
  ## WARN: pls keep 'false' in production env, or if you know what you want.
  ##
  autoResetLatestPosMode: false
  ## @param instanceParserParallelThreadSize type int, concurrent thread number, default 60% available processors
  ## suggest not to exceed Runtime.getRuntime().availableProcessors()
  ##
  instanceParserParallelThreadSize: 4
  ## @param instanceBinlogFormat type list, repl mysql binlog format
  ##
  instanceBinlogFormat: "ROW,STATEMENT,MIXED"
  ##


InstanceConf:
  ## @param canal.instance.gtidon boolean, for instance gtid mode.
  ## @param canal.instance.mysql.slaveId.autoGenerate boolean, for auto generate instance serverID.
  ## @param canal.instance.mysql.slaveId.number int, for instance serverID.
  ##
  canal:
    instance:
      ## Support multi instance.
      - name: example
        mysql:
          slaveId:
            autoGenerate: false
            number: 12345
        gtidon: false
        master:
          address: 127.0.0.1
          ## @param journalName type string, it's mysql-binlog name, default none.
          ##
          journalName: ""
          ## @param position type int, it's binlog position, default none.
          ##
          position: ""
          ## @param timestamp type int of microseconds-timestamp, it's mysql binlog timestamp, default none.
          ## Example SQL: select FLOOR(UNIX_TIMESTAMP(NOW(3)) * 1000) as NOW_ms;
          ##
          timestamp: ""
          ## @param gtid type is int, it's position of master gtid, default none.
          ##
          gtid: ""
        standby:
          ## @param enable standby mysql slave.
          ## if true, it will be auto enable instance.detection check.
          ## if true, it will be auto enable instance.detection.heartbeatHaEnable.
          ##
          enabled: true
          address: 127.0.0.1
          ## @param journalName type string, it's mysql-binlog name, default none.
          ##
          journalName: ""
          ## @param position type int, it's binlog position, default none.
          ##
          position: ""
          ## @param timestamp type int of microseconds-timestamp, it's mysql binlog timestamp, default none.
          ## Example SQL: select FLOOR(UNIX_TIMESTAMP(NOW(3)) * 1000) as NOW_ms;
          ##
          timestamp: ""
          ## @param gtid type is int, it's position of master gtid, default none.
          ##
          gtid: ""
        dbUsername: canal
        dbPassword: canal
        filter:
          regex: ".*\\..*"
          black:
            regex: "mysql\\.slave_.*"

## configure canal tsdb database by mysql detail
TsdbDBConf:
  enabled: true
  canal_tsdb_mysql_address: 127.0.0.1
  canal_tsdb_mysql_port: 3306
  canal_tsdb_db_name: canal_tsdb
  canal_tsdb_db_user: canal
  canal_tsdb_db_password: canal


serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## @param extraEnvVars Extra environment variables to be set on canal-server container
## e.g:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars: []
## @param extraEnvVarsCM ConfigMap with extra environment variables
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Secret with extra environment variables
##
extraEnvVarsSecret: ""

## @param command Default container command (useful when using custom images). Use array form
##
command: []
## @param args Default container args (useful when using custom images). Use array form
##
args: []

podAnnotations: {}

## Canal-server pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enable pod Security Context
## @param podSecurityContext.fsGroup Group ID for the container
##
podSecurityContext:
  enabled: false
  fsGroup: 1001

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

## @section canal-server; deployment/statefulset parameters

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: canal.example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## @param hostAliases canal-server; pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## Example:
  ## limits:
  ##    cpu: 250m
  ##    memory: 256Mi
  limits: {}
  ## Examples:
  ## requests:
  ##    cpu: 250m
  ##    memory: 256Mi
  requests: {}
  ##  cpu: 250m
  ##  memory: 256Mi

## Configure extra options for liveness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 5
## Configure extra options for readiness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 5
## Configure extra options for startupProbe probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param startupProbe.enabled Enable startupProbe
## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
## @param startupProbe.periodSeconds Period seconds for startupProbe
## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
## @param startupProbe.failureThreshold Failure threshold for startupProbe
## @param startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  enabled: false
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 60
## @param customLivenessProbe Override default liveness probe
##
customLivenessProbe: {}
## @param customReadinessProbe Override default readiness probe
##
customReadinessProbe: {}
## @param customStartupProbe Override default startup probe
##
customStartupProbe: {}

## @param initContainers Add additional init containers to the Canal-server; pods
## e.g:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: []
## @param sidecars Add additional sidecar containers to the Canal-server; pods
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## Zookeeper chart configuration
## https://github.com/bitnami/charts/blob/master/bitnami/zookeeper/values.yaml
##
zookeeper:
  ## @param zookeeper.enabled Switch to enable or disable the Zookeeper helm chart
  ##
  enabled: true
  auth:
    ## @param zookeeper.auth.enabled Enable Zookeeper auth, it's always false.
    ##
    enabled: false
    ## @param zookeeper.auth.clientUser User that will use Zookeeper clients to auth
    ##
    clientUser: ""
    ## @param zookeeper.auth.clientPassword Password that will use Zookeeper clients to auth
    ##
    clientPassword: ""
    ## @param zookeeper.auth.serverUsers Comma, semicolon or whitespace separated list of user to be created. Specify them as a string, for example: "user1,user2,admin"
    ##
    serverUsers: ""
    ## @param zookeeper.auth.serverPasswords Comma, semicolon or whitespace separated list of passwords to assign to users when created. Specify them as a string, for example: "pass4user1, pass4user2, pass4admin"
    ##
    serverPasswords: ""
## This value is only used when zookeeper.enabled is set to false
##
externalZookeeper:
  ## @param externalZookeeper.servers Server or list of external Zookeeper servers to use
  ## Example:
  ## servers:
  ##   - zkServer1:2181
  ##   - zkServer2:2181
  ##
  servers: []